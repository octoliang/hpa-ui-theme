@import "mixins/mixins";
@import "common/var";

@include b(step) {
  position: relative;
  flex-shrink: 1;

  @include pseudo(last-of-type) {
    @include e(line) {
      display: none;
    }

    // 只有未设置 space 的情况下才自适应宽度
    @include when(flex) {
      flex-basis: auto !important;
      flex-shrink: 0;
      flex-grow: 0;
    }

    @include e((main, description)) {
      padding-right: 0;
    }
  }

  @include e(head) {
    position: relative;
    width: 100%;

    @include when(process) {
      color: $title-color;
      border-color: $title-color;
    }

    @include when(wait) {
      color: $text-color-disabled;
      border-color: $text-color-disabled;
    }

    @include when(success) {
      color: $success-color;
      border-color: $success-color;
    }

    @include when(error) {
      color: $danger-color;
      border-color: $danger-color;
    }

    @include when(finish) {
      color: $primary-color;
      border-color: $primary-color;
    }
  }

  @include e(icon) {
    position: relative;
    z-index: 1;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    width: 24px;
    height: 24px;
    font-size: 14px;
    box-sizing: border-box;
    background: $white-color;
    transition: .15s ease-out;

    @include when(text) {
      border-radius: 50%;
      border: 2px solid;
      border-color: inherit;
    }

    @include when(icon) {
      width: 40px;
    }
  }

  @include e(icon-inner) {
    display: inline-block;
    user-select: none;
    text-align: center;
    font-weight: bold;
    line-height: 1;
    color: inherit;

    &[class*=el-icon]:not(.is-status) {
      font-size: 25px;
      font-weight: normal;
    }

    // 组件自身表示状态的图标
    @include when(status) {
      transform: translateY(1px);
    }
  }

  @include e(line) {
    position: absolute;
    border-color: inherit;
    background-color: $text-color-disabled;
  }

  @include e(line-inner) {
    display: block;
    border-width: 1px;
    border-style: solid;
    border-color: inherit;
    transition: .15s ease-out;
    box-sizing: border-box;
    width: 0;
    height: 0;
  }

  @include e(main) {
    white-space: normal;
    text-align: left;
  }

  @include e(title) {
    font-size: 14px;
    line-height: 38px;

    @include when(process) {
      font-weight: bold;
      color: $title-color;
    }

    @include when(wait) {
      color: $text-color-disabled;
    }

    @include when(success) {
      color: $success-color;
    }

    @include when(error) {
      color: $danger-color;
    }

    @include when(finish) {
      color: $primary-color;
    }
  }

  @include e(description) {
    padding-right: 10%;
    margin-top: -5px;
    font-size: 12px;
    line-height: 20px;
    font-weight: normal;

    @include when(process) {
      color: $title-color;
    }

    @include when(wait) {
      color: $text-color-disabled;
    }

    @include when(success) {
      color: $success-color;
    }

    @include when(error) {
      color: $danger-color;
    }

    @include when(finish) {
      color: $primary-color;
    }
  }

  @include when(horizontal) {
    display: inline-block;

    @include e(line) {
      height: 2px;
      top: 11px;
      left: 0;
      right: 0;
    }
  }

  @include when(vertical) {
    display: flex;

    @include e(head) {
      flex-grow: 0;
      width: 24px;
    }

    @include e(main) {
      padding-left: 10px;
      flex-grow: 1;
    }

    @include e(title) {
      line-height: 24px;
      padding-bottom: 4px;
    }

    @include e(line) {
      width: 2px;
      top: 0;
      bottom: 0;
      left: 11px;
    }

    @include e(icon) {
      @include when(icon) {
        width: 24px;
      }
    }
  }

  @include when(center) {

    @include e(head) {
      text-align: center;
    }

    @include e(main) {
      text-align: center;
    }

    @include e(description) {
      padding-left: 20%;
      padding-right: 20%;
    }

    @include e(line) {
      left: 50%;
      right: -50%;
    }
  }

  @include when(simple) {
    display: flex;
    align-items: center;

    @include e(head) {
      width: auto;
      font-size: 0;
      padding-right: 10px;
    }

    @include e(icon) {
      background: transparent;
      width: 16px;
      height: 16px;
      font-size: 12px;
    }

    @include e(icon-inner) {
      &[class*=el-icon]:not(.is-status) {
        font-size: 18px;
      }

      &.is-status {
        transform: scale(.8) translateY(1px);
      }
    }

    @include e(main) {
      position: relative;
      display: flex;
      align-items: stretch;
      flex-grow: 1;
    }

    @include e(title) {
      font-size: 16px;
      line-height: 20px;
    }

    @include pseudo('not(:last-of-type)') {
      @include e(title) {
        max-width: 50%;
        word-break: break-all;
      }
    }

    @include e(arrow) {
      flex-grow: 1;
      display: flex;
      align-items: center;
      justify-content: center;

      &::before,
      &::after {
        content: '';
        display: inline-block;
        position: absolute;
        height: 15px;
        width: 1px;
        background: $text-color-disabled;
      }

      &::before {
        transform: rotate(-45deg) translateY(-4px);
        transform-origin: 0 0;
      }

      &::after {
        transform: rotate(45deg) translateY(4px);
        transform-origin: 100% 100%;
      }
    }

    @include pseudo(last-of-type) {
      @include e(arrow) {
        display: none;
      }
    }
  }
}
 //by txk
@mixin BdColor($bdcolor:solid 2px $primary-color){
  .el-step__head{
    .el-step__icon{
      border:solid 2px $bdcolor;
    }
  }
}

@include  b(step){
  &-timeline{
    .el-step__head{
      .el-step__icon{
        width:$step-size;
        height:$step-size;
        left: 50%;
        top: 8%;
        transform: translateX(-50%);
        .el-step__icon-inner{
          font-size:$font-size-no;
        }
      }
    }
   .el-step__head.is-finish{
    .el-step__line{
       top:$fir-step-top;
    }
   } 
   .el-step__title{
      color: $primary-color;
      font-weight: normal;
   }
   .el-step__description{
      color: $title-color;
   }
   .el-step__main{
     margin-bottom: 15px;
     margin-top: $margin-xs / 2;
   }
  }
  &-DeepOrange{
    @include BdColor($orange-color);
  }
  &-green{
    @include BdColor($success-color-light);
  }
  &-LightOrange{
    @include BdColor($warning-color-light);
  }
  &-blue{
    @include BdColor($primary-color-main);
  }

  &-bluecircle{
    .el-step__icon{
      width: 8px;
      height: 8px;
      color: transparent;
      background-color: #4CA8FD;
      border-radius: 100%;
      border: none;
      left: 50%;
      transform: translateX(-50%);
    }
    .el-step__title{
      color:#38485A;
      font-family: Montserrat;
      font-size: 13px;
      font-weight: 400;
    }
    .el-step__description {
      color:#8391A0;
      max-width: 390px;
      font-family: Poppints;
      font-size: 12px;
      font-weight:400;
      text-align: left;
    }
  } 
}

.el-step.el-step-timeline:last-of-type .el-step__line{
   display: block;
}

/* Timeline (Add by Lucinda)
-------------------------------------- */
.el-timeline{
  position: relative;
  padding: $padding-base 0 0;
  margin: $margin-base 0;
  box-sizing: border-box;

  &:before{
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    width: $timeline-line-width;
    background: $border-color-base;
    left: ($timeline-info-width + 5);
  }

  &-item{
    position: relative;
    padding: 0 0 $padding-base $timeline-info-width;

    &-dot{
      position: absolute;
      width: $timeline-dot-size;
      height: $timeline-dot-size;
      background-color: $white-color;
      border-radius: $border-radius-circle;
      border: 2px solid $primary-color;

      &.danger{
        border-color: $danger-color;
      }
      &.warning{
        border-color: $warning-color-light;
      }
      &.success{
        border-color: $success-color-light;
      }
    }

    &-info{
      position: absolute;
      left: 0;
      top: -4px;
      width: $timeline-info-width;
      padding: 0 $padding-sm;
      text-align: right;
      color: $text-color;
      font-size: $font-size-md;

      &-affix{
        font-size: $font-size-tiny;
      }
    }

    &-content{
      position: relative;
      top: -4px;
      padding: 0 0 0 $padding-base;
      color: $title-color;
      min-height: $timeline-content-min-height;

      &-title{
        font-size: $font-size-base;
        color: $primary-color;
        line-height: 1.5;
        font-weight: 400;
      }
    }

  }
}
